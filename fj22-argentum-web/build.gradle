plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building a CLI application.
    id 'war'
}

group 'br.com.ferracini.argentum'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'com.thoughtworks.xstream:xstream:1.4.12'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    // https://mvnrepository.com/artifact/org.primefaces/primefaces
    compile group: 'org.primefaces', name: 'primefaces', version: '7.0'

    // https://mvnrepository.com/artifact/com.sun.faces/jsf-api
    compile group: 'com.sun.faces', name: 'jsf-api', version: '2.2.20'

    // https://mvnrepository.com/artifact/com.sun.faces/jsf-impl
    compile group: 'com.sun.faces', name: 'jsf-impl', version: '2.2.14'
    // https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/javax.servlet.jsp.jstl-api
    compile group: 'javax.servlet.jsp.jstl', name: 'javax.servlet.jsp.jstl-api', version: '1.2.1'
    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: '3.141.59'
}

//application {
//    // Define the main class for the application.
//    mainClassName = 'br.com.ferracini.argentum.modelo.App'
//}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    systemProperties = [
        'aceitacao': true
    ]
}

task deploy(type: Copy) {
    dependsOn(build)
    println('Executando deploy')

    from "$buildDir/libs"
    include "*.war"
    
    print "OS: "+System.getProperty("os.name").toUpperCase()
    
    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
        println('Copiando arquivos')
        into "F:\\apache-tomcat-9.0.35\\webapps\\"
    } else {
        //TODO linux tomcat_home
        //into $TOMCAT_HOME+"\\webapps\\"
    }

}

hello.doLast {
    println "- I'm the largest animal that has ever lived on this planet."
}

